{
  "permissions": {
    "allow": [
      "Edit",
      "Read",
      "Read(/Users/user/.claude/projects/**)",
      "Read(/Users/user/.claude/**)",
      "Write",
      "Bash(mkdir:*)",
      "Bash(touch:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(npm:*)",
      "Bash(npm run:*)",
      "Bash(grep:*)",
      "Bash(yarn:*)",
      "Bash(uv:*)",
      "Bash(find:*)",
      "Bash(mv:*)",
      "Bash(grep:*)",
      "Bash(ls:*)",
      "Bash(cp:*)",
      "Bash(chmod:*)",
      "Bash(touch:*)",
      "Bash(npx tsc:*)",
      "Bash(python:*)",
      "Bash(pytest:*)",
      "Bash(osascript:*)",
      "Bash(bats:*)",
      "Bash(terminal-notifier:*)",
      "Bash(claude-code hooks:*)",
      "WebFetch(domain:www.notion.so)",
      "WebFetch(domain:docs.anthropic.com)",
      "mcp__notion__fetch",
      "mcp__framelink-figma-mcp__get_figma_data",
      "mcp__framelink-figma-mcp__download_figma_images",
      "mcp__context7__resolve-library-id",
      "mcp__context7__get-library-docs",
      "mcp__mui-mcp__useMuiDocs",
      "mcp__mui-mcp__fetchDocs",
      "mcp__notion__search",
      "mcp__notion__fetch",
      "mcp__notion__notion-get-comments",
      "mcp__notion__notion-get-users",
      "mcp__notion__notion-get-self",
      "mcp__notion__notion-get-user"
    ],
    "deny": [
      "Read(./.env)",
      "Read(./.env.*)",
      "Bash(git push:*)",
      "Bash(git reset:*)",
      "Bash(git clean:*)",
      "Bash(git merge:*)",
      "Bash(git rebase:*)",
      "Bash(git checkout:*)"
    ],
    "ask": []
  },
  "statusLine": {
    "type": "command",
    "command": "uv run .claude/status_lines/status_line.py",
    "padding": 0
  },
  "hooks": {
    "PreToolUse": [
      {
        "matcher": "",
        "hooks": [
          {
            "type": "command",
            "command": "uv run .claude/hooks/pre_tool_use.py"
          }
        ]
      }
    ],
    "PostToolUse": [
      {
        "matcher": "",
        "hooks": [
          {
            "type": "command",
            "command": "uv run .claude/hooks/post_tool_use.py"
          }
        ]
      },
      {
        "matcher": "^Task$",
        "hooks": [
          {
            "type": "command",
            "command": "uv run .claude/hooks/subagent_output_logger.py"
          },
          {
            "type": "command",
            "command": "uv run .claude/hooks/task_notify.py --event subagent"
          }
        ]
      },
      {
        "matcher": "^TodoWrite$",
        "hooks": [
          {
            "type": "command",
            "command": "uv run .claude/hooks/task_notify.py --event todo --quiet"
          }
        ]
      }
    ],
    "UserPromptSubmit": [
      {
        "hooks": [
          {
            "type": "command",
            "command": "uv run .claude/hooks/user_prompt_submit.py --log-only --store-last-prompt --name-agent"
          }
        ]
      }
    ],
    "PreCompact": [
      {
        "matcher": "",
        "hooks": [
          {
            "type": "command",
            "command": "uv run .claude/hooks/pre_compact.py"
          }
        ]
      }
    ],
    "SessionStart": [
      {
        "matcher": "",
        "hooks": [
          {
            "type": "command",
            "command": "uv run .claude/hooks/session_start.py"
          }
        ]
      }
    ],
    "Stop": [
      {
        "hooks": [
          {
            "type": "command",
            "command": "uv run .claude/hooks/task_notify.py --event stop"
          }
        ]
      }
    ],
    "SubagentStop": [
      {
        "hooks": [
          {
            "type": "command",
            "command": "uv run .claude/hooks/task_notify.py --event subagent --quiet"
          }
        ]
      }
    ]
  }
}
